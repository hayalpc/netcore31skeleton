<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" throwExceptions="true">

  <extensions>
    <add assembly="NLog.Web.AspNetCore" />
    <add assembly="EasyGelf.NLog"/>
  </extensions>

  <variable name="logLayout" value="${longdate}|${aspnet-request-ip:CheckForwardedForHeader=true}|${aspnet-traceidentifier}|${aspnet-Request-Url}?${aspnet-Request-QueryString}|${uppercase:${level}}|${message}" />
  
  <targets>
    <target name="logfile" fileName="xxx" xsi:type="File"
            layout="${var:logLayout}"/>

    <target name="logconsole" xsi:type="Console"
            layout="${var:logLayout}"/>

    <target name="graylog" xsi:type="GelfUdp" facility="xxx" remoteAddress="88.99.150.116" remotePort="1220"
            layout="${var:logLayout}" />

    <target xsi:type="File" name="allfile" fileName="${gdc:item=configDir}\nlog-all.log"
               layout="${longdate}|${event-properties:item=EventId.Id}|${logger}|${uppercase:${level}}|${message} ${exception}" />

    <target xsi:type="File" name="ownFile-web" fileName="${gdc:item=configDir}\nlog-own.log"
             layout="${longdate}|${event-properties:item=EventId.Id}|${logger}|${uppercase:${level}}|  ${message} ${exception}" />

    <target xsi:type="Null" name="blackhole" />
    
    <target name="database" xsi:type="Database" dbProvider="Npgsql.NpgsqlConnection, Npgsql">
      <connectionString>${gdc:item=connectionString}</connectionString>
      
      <commandText>
        insert into "dbo"."Log" (
        "Application", "Logged", "Level", "Message","Logger", "CallSite", "Exception","TraceId","SessionId"
        ) values (
        @Application, now(), @Level, @Message,@Logger, @Callsite, @Exception,@TraceId,@SessionId);
      </commandText>

      <parameter name="@application" layout="AspNetCoreNlog" />
      <parameter name="@logged" layout="${date}" />
      <parameter name="@level" layout="${level}" />
      <parameter name="@message" layout="${message}" />
      <parameter name="@logger" layout="${logger}" />
      <parameter name="@callSite" layout="${callsite:filename=true}" />
      <parameter name="@exception" layout="${exception:tostring}" />
      <parameter name="@traceId" layout="${aspnet-traceidentifier}" />
      <parameter name="@sessionId" layout="${aspnet-sessionid}" />
    </target>
  </targets>

  <rules>
    <!--<logger name="*" minlevel="Trace" writeTo="database" >
      <filters>
        <when condition="equals('${callsite}','Microsoft.EntityFrameworkCore.Internal.RelationalLoggerExtensions.CommandExecuted')" action="Ignore" />
      </filters>
    </logger>

    <logger name="*" minlevel="Trace" writeTo="logfile" >
      <filters>
        <when condition="equals('${callsite}','Microsoft.EntityFrameworkCore.Internal.RelationalLoggerExtensions.CommandExecuted')" action="Ignore" />
      </filters>
    </logger>

    <logger name="*" minlevel="Debug" writeTo="logconsole" >
      <filters>
        <when condition="equals('${callsite}','Microsoft.EntityFrameworkCore.Internal.RelationalLoggerExtensions.CommandExecuted')" action="Ignore" />
      </filters>
    </logger>

    <logger name="*" minlevel="Trace" writeTo="graylog" >
      <filters>
        <when condition="equals('${callsite}','Microsoft.EntityFrameworkCore.Internal.RelationalLoggerExtensions.CommandExecuted')" action="Ignore" />
      </filters>
    </logger>-->

    <!--All logs, including from Microsoft-->
    <logger name="*" minlevel="Trace" writeTo="graylog" />
    <logger name="*" minlevel="Trace" writeTo="allfile" />

    <logger name="*" minlevel="Trace" writeTo="database" />

    <!--Skip Microsoft logs and so log only own logs-->
    <logger name="Microsoft.*" minlevel="Trace" writeTo="blackhole" final="true" />
    <logger name="*" minlevel="Trace" writeTo="ownFile-web" />
    
  </rules>
</nlog>